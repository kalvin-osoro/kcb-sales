apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: "{{ .Values.appName }}-frontend"
spec:
  host: "{{ .Values.appName }}-frontend-kcb-ses-poc.apps.dev.aro.kcbgroup.com"
  port:
    targetPort: 8081
  to:
    kind: Service
    name: "{{ .Values.appName }}-frontend"
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.appName }}-frontend"
spec:
  type: ClusterIP
  selector:
    app: "{{ .Values.appName }}-frontend"
  ports:
    - port: 8081
      targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    image.openshift.io/triggers: >-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "{{ .Values.appName }}-frontend:latest"
          },
          "fieldPath": "spec.template.spec.containers[?(@.name==\"{{ .Values.appName }}-frontend\")].image",
          "pause": "false"
        }
      ]
  name: "{{ .Values.appName }}-frontend"
  labels:
    app: "{{ .Values.appName }}-frontend"

spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.appName }}-frontend"
  template:
    metadata:
      labels:
        app: "{{ .Values.appName }}-frontend"
    spec:
      containers:
        - name: "{{ .Values.appName }}-frontend"
          image: "{{ .Values.appName }}-frontend:latest"
          env:
            - name: BACKEND_API_URL
              value: "{{ .Values.appName }}-backend"
            - name: BACKEND_API_PORT
              value: "8080" 
          ports:
            - containerPort: 8081
          startupProbe:
            httpGet:
              path: /
              port: 8081
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 50 
            periodSeconds: 5 
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 50 
            periodSeconds: 5